go run main.go import --project-id="world-fishing-827" --query="WITH fishing_vessels_by_ssvid AS ( SELECT ssvid, year, best_vessel_class AS geartype FROM \`world-fishing-827.gfw_research.fishing_vessels_ssvid_v20210202\` ), fishing_vessels AS ( SELECT fv.ssvid AS ssvid, year, FROM \`pipe_production_v20201001.vessel_info\` vi JOIN fishing_vessels_by_ssvid fv ON   (fv.ssvid = vi.ssvid AND (extract(year from first_timestamp) = year   OR extract(year from last_timestamp) = year)) WHERE shipname IS NOT NULL ), good_segments AS ( SELECT seg_id FROM \`world-fishing-827.gfw_research.pipe_v20201001_segs\` se JOIN fishing_vessels fv ON (fv.ssvid = se.ssvid AND (extract(year from first_timestamp) = year   OR extract(year from last_timestamp) = year)) WHERE good_seg AND NOT overlapping_and_short ), shipnames_aggregated AS ( SELECT vessel_id, STRUCT (shipname.value AS name, SUM(shipname.count) AS counter) as aggr_shipnames, FROM \`world-fishing-827.pipe_production_v20201001.segment_info\` si JOIN good_segments USING (seg_id) WHERE shipname.value IS NOT NULL AND shipname.count IS NOT NULL GROUP BY vessel_id, shipname.value ), shipnames_grouped AS ( SELECT vessel_id, ARRAY_AGG(aggr_shipnames) as shipnames FROM shipnames_aggregated GROUP BY vessel_id ), imos_aggregated as ( SELECT vessel_id, STRUCT (imo.value AS name, SUM(imo.count) AS counter) as aggr_imos, FROM \`world-fishing-827.pipe_production_v20201001.segment_info\` si JOIN good_segments USING (seg_id) WHERE shipname.value IS NOT NULL AND shipname.count IS NOT NULL GROUP BY vessel_id, imo.value ), imos_grouped as ( SELECT vessel_id, ARRAY_AGG(aggr_imos) as imos FROM imos_aggregated GROUP BY vessel_id ), callsigns_aggregated as ( SELECT vessel_id, STRUCT (callsign.value AS name, SUM(callsign.count) AS counter) as aggr_callsign, FROM \`world-fishing-827.pipe_production_v20201001.segment_info\` si JOIN good_segments USING (seg_id) WHERE shipname.value IS NOT NULL AND shipname.count IS NOT NULL GROUP BY vessel_id, callsign.value ), callsigns_grouped AS ( SELECT vessel_id, ARRAY_AGG(aggr_callsign) as callsigns FROM callsigns_aggregated GROUP BY vessel_id ), aggregated_data AS ( SELECT sg.vessel_id, shipnames, imos, callsigns FROM shipnames_grouped sg INNER JOIN imos_grouped ig USING (vessel_id) INNER JOIN callsigns_grouped cg USING (vessel_id) ) SELECT vi.vessel_id AS id, \`world-fishing-827.udfs.mmsi_to_iso3\`(vi.ssvid) AS flag, vi.ssvid as mmsi, 'AIS' as source, vi.first_timestamp as firstTransmissionDate, vi.last_timestamp as lastTransmissionDate, if(vi.n_imo.value is null, null, vi.imo.value) as imo, if(vi.n_callsign.value is null, null, vi.callsign.value) as callsign, if(vi.n_shipname.value is null, null, vi.shipname.value) as shipname, ad.shipnames as otherShipnames, ad.imos as otherImos, ad.callsigns as otherCallsigns FROM aggregated_data ad INNER JOIN \`world-fishing-827.pipe_production_v20201001.vessel_info\` vi USING (vessel_id) WHERE vi.shipname.value IS NOT null AND vi.shipname.value <> \"\" LIMIT 10" --index-name=test_vessels_normalized --elastic-search-url="https://gfw:fishingvessel@elasticsearch.globalfishingwatch.org" --normalize=shipname --normalize-endpoint="https://us-central1-world-fishing-827.cloudfunctions.net/normalize_shipname_http" --on-error=delete
